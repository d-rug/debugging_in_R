---
title: "An Example"
format: html
---

# Example Buggy Code

The Github repository associated with this webpage contains example
[buggy code][bug_code] for you to practice on and [fixed code][fixed_code] you
can use to check yourself.

[bug_code]: https://github.com/d-rug/debugging_in_R/blob/main/R/buggy_code.R
[fixed_code]: https://github.com/d-rug/debugging_in_R/blob/main/R/fixed_code.R


## A Reprex of Date Issue

At one point in the debugging process, you may find that if you use the
`ifelse()` function to deal with the date problem, your dates have been
converted to integers. If you weren't able to find any answers to your problem
via a search engine or StackOverflow, you could post your issue to one of a
variety of forums or mailing lists using a "reprex" or reproducible example. A
reprex is code that anyone can run regardless of whether they have access to
your data or not. It should also demonstrate the problem you are having. A
reprex for the date issue might look like this:

```{r }

date_strings = c('2025-01-01', '1/2/2025')

class(date_strings)

dates = ifelse(grepl('\\/', date_strings),
               as.Date(date_strings, format='%m/%d/%Y'),
               as.Date(date_strings, format='%Y-%m-%d'))

print(dates)
class(dates)

```


